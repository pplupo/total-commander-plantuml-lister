name: Build TC PlantUML WebView Lister

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tools
        shell: pwsh
        run: |
          choco install ninja 7zip -y

      # Get latest WebView2 SDK (headers + loader)
      - name: Fetch WebView2 SDK (NuGet latest)
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $pkg = "$env:RUNNER_TEMP\webview2.nupkg"
          Invoke-WebRequest -Uri "https://www.nuget.org/api/v2/package/Microsoft.Web.WebView2" -OutFile $pkg
          & "C:\Program Files\7-Zip\7z.exe" x $pkg "-o$env:RUNNER_TEMP\webview2" -y | Out-Null

          New-Item -ItemType Directory -Force -Path "third_party\WebView2\build\native\include" | Out-Null
          Copy-Item "$env:RUNNER_TEMP\webview2\build\native\include\*" "third_party\WebView2\build\native\include" -Recurse -Force

          New-Item -ItemType Directory -Force -Path "third_party\WebView2\build\native\x64" | Out-Null
          Copy-Item "$env:RUNNER_TEMP\webview2\build\native\x64\WebView2Loader.dll" "third_party\WebView2\build\native\x64\WebView2Loader.dll" -Force

      - name: MSVC Dev Cmd
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Configure (CMake)
        shell: pwsh
        run: |
          cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build (CMake)
        shell: pwsh
        run: |
          cmake --build build --config Release -v

      - name: Verify built WLX at dist/
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          if (!(Test-Path "dist\PlantUmlWebView.wlx64")) {
            # Last-resort: if SUFFIX wasn't honored for any reason, try to find and rename.
            $candidate = Get-ChildItem -Recurse -File -Filter "PlantUmlWebView*.dll" | Sort-Object LastWriteTime -Descending | Select-Object -First 1
            if ($candidate) {
              New-Item -ItemType Directory -Force -Path dist | Out-Null
              Copy-Item $candidate.FullName "dist\PlantUmlWebView.wlx64" -Force
            }
          }
          if (!(Test-Path "dist\PlantUmlWebView.wlx64")) {
            Get-ChildItem -Recurse -File | Select-Object FullName,Length,LastWriteTime | Out-String -Width 2000 | Write-Host
            throw "Build succeeded but dist\PlantUmlWebView.wlx64 not found."
          }

      - name: Stage plugin files
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $stage = "package\PlantUmlWebView"
          Remove-Item -Recurse -Force $stage -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Force -Path $stage | Out-Null

          Copy-Item -Force dist\PlantUmlWebView.wlx64              $stage\
          Copy-Item -Force third_party\WebView2\build\native\x64\WebView2Loader.dll $stage\
          Copy-Item -Force resources\pluginst.inf                   $stage\
          Copy-Item -Force src\plantumlwebview.ini                  $stage\
          if (Test-Path README.md) { Copy-Item -Force README.md     $stage\ }

      - name: Package (single zip with root files)
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $out = "PlantUmlWebView.zip"
          Remove-Item -Force $out -ErrorAction SilentlyContinue
          Compress-Archive -Path package\PlantUmlWebView\* -DestinationPath $out -Force

          # sanity: pluginst.inf at root; no nested zips
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          $zip = [IO.Compression.ZipFile]::OpenRead($out)
          $hasInf = $zip.Entries | Where-Object { $_.FullName -ieq 'pluginst.inf' } | Select-Object -First 1
          $nested = $zip.Entries | Where-Object { $_.FullName -match '\.zip$' }
          $zip.Dispose()
          if (-not $hasInf) { throw "pluginst.inf is not at the root of $out" }
          if ($nested)      { throw "Nested zip(s) found in $out: $($nested.FullName -join ', ')" }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PlantUmlWebView
          path: PlantUmlWebView.zip
